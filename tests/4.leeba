begin struct rational_t:
	int num;
	int den;
end rational_t;

begin rational_t frac(int a, int b):
	rational_t rt;
	rt.num = a;
	rt.den = b;
	return rt; 
end frac;

begin bool eq(rational_t a, rational_t b):
	bool r = false;
	begin if (a.num*b.den == a.den*b.num):
		r = true;
	end if;
	return r;
end eq;

begin rational_t neg(rational_t a):
	a.num = 0-a.num;
	return a;
end neg;

begin rational_t prod(rational_t a, rational_t b):
	rational_t rt;
	rt.num = a.num * b.num;
	rt.den = a.den * b.den;
	return rt;
end prod;

begin rational_t div(rational_t a, rational_t b):
	rational_t rt;
	rt.num = a.num * b.den;
	rt.den = a.den * b.num;
	return rt;
end div;

begin rational_t inv(rational_t a):
	rational_t rt;
	rt.num = a.den;
	rt.den = a.num;
	return rt;
end inv;

begin int main():
	rational_t a = frac(-3,-4);
	rational_t b = frac(4,8);
	rational_t c = neg(a);
	print(c.num);
	print(c.den);
	bool r = eq(a,b);
	return 2;
end main;