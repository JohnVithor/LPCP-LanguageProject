begin struct node:
    int value;
    ref node left;
    ref node right;
end node;

begin struct tree:
    ref node head;
end tree;

begin ref node create_node(int v):
  ref node n = create node;
  n.value = v;
  return ref n;
end create_node;

begin ref node insert(ref node n, int v):
    begin if(NULL n):
        ref node m = create_node(v);
        return ref m;
    end if;
    begin if (v < n.value):
        n.left = insert(n.left, v);
    end if
    begin else:
        n.right = insert(n.right, v);
    end else;
  return ref n;
end insert;

begin int find_min(ref node n):
    int min;
    begin if(not NULL n.left):
        min = find_min(n.left);
        return min;
    end if;
    begin if(NULL n.left):
        return n.value;
    end if;
    return min;
end find_min;

begin int find_max(ref node n):
    int max;
    begin if(not NULL n.right):
        max = find_max(n.right);
        return max;
    end if;
    begin if(NULL n.right):
        return n.value;
    end if;
    return max;
end find_max;

begin print_tree(ref node n, int lvl):
    //print("lvl" + lvl ": " + n.value);
    begin if(not NULL n.right):
        print_tree(n.right, lvl + 1);
    end if;
    begin if(not NULL n.left):
        print_tree(n.left, lvl + 1);
    end if;
end print_tree;

begin int main():
    ref tree a = create tree;
    int i = 0;
    a.head = insert(a.head, 5);
    a.head = insert(a.head, 1);
    a.head = insert(a.head, 15);
    a.head = insert(a.head, 17);
    a.head = insert(a.head, 2);
    int min = find_min(a.head);
    int max = find_max(a.head);   
    print("O minimo é: ");
    print(min);
    newline;
    print("O máximo é: ");
    print(max);
    newline;
    return 1;
end main;
